    Standard Template Library (STL) : a)Containers : II)Container adapters/derived containers -
                                                          1)stack, 2)queue, 3)priority queue

1)Stack:

#include <bits/stdc++.h>
using namespace std;
int main() {
    // Write C++ code here
   //create
   stack<int>s;
   s.push(1);
   s.push(2);
   s.push(3);
   s.push(4);
    cout<<"top ele:"<<s.top()<<endl;
    cout<<"empty or not:"<<s.empty()<<endl;
    cout<<"before pop:"<<s.size()<<endl;
    s.pop(); 
    cout<<"after pop:"<<s.size()<<endl;
    return 0;
}
//output:
top ele:4
empty or not:0
before pop:4
after pop:3

2)Queue:

#include <bits/stdc++.h>
using namespace std;
int main() {
    // Write C++ code here
   //create
   queue<int>q;
   q.push(1);
   q.push(2);
   q.push(3);
   q.push(4);
    cout<<"first ele:"<<q.front()<<endl;
    cout<<"empty or not:"<<q.empty()<<endl;
    cout<<"before pop:"<<q.size()<<endl;
    q.pop(); 
    cout<<"after pop:"<<q.size()<<endl;
    return 0;
}

//output:
first ele:1
empty or not:0
before pop:4
after pop:3

3)Priority Queue:

// Online C++ compiler to run C++ program online
#include <bits/stdc++.h>
using namespace std;
int main() {
    // Write C++ code here
   //max heap
   priority_queue<int>maxi;
   //min heap
   priority_queue<int,vector<int>,greater<int>>mini;
   maxi.push(1);
   maxi.push(3);
   maxi.push(2);
   maxi.push(0);
    cout<<"size:"<<maxi.size()<<endl;
    int n=maxi.size();
    for(int i=0;i<n;i++){
        cout<<maxi.top()<<" ";
        maxi.pop();
    }cout<<endl;
    cout<<"empty or not:"<<maxi.empty()<<endl;
    
   mini.push(1);
   mini.push(3);
   mini.push(2);
   mini.push(0);
    cout<<"size:"<<mini.size()<<endl;
    int m=mini.size();
    for(int i=0;i<m;i++){
        cout<<mini.top()<<" ";
        mini.pop();
    }cout<<endl;
    cout<<"empty or not:"<<mini.empty()<<endl;
    return 0;
}

//output:
size:4
3 2 1 0 
empty or not:1
size:4
0 1 2 3 
empty or not:1